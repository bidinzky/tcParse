import type { Digit } from "@ark/util";
/**
 * Executes a provided function for an installed set of TypeScript versions.
 *
 * Your primary TypeScript version at node_modules/typescript will be
 * temporarily renamed to node_modules/typescript-temp, and reset after each
 * version has been executed, regardless of failures.
 *
 * Throws an error if any version fails when the associated function is executed.
 *
 * fn should spawn a new process so the new symlinked version can be loaded.
 */
export declare const forTypeScriptVersions: (versions: TsVersionData[], fn: (version: TsVersionData) => void) => void;
export type TsVersionData = {
    alias: string;
    version: string;
    path: string;
};
/**
 * Find and return the paths of all installed TypeScript versions by directly scanning
 * node_modules directories in the current package and all parent packages.
 *
 * This function only looks at directories, bypassing package.json entirely.
 *
 * @returns {TsVersionData[]} Information about each TypeScript version found
 */
export declare const findAttestTypeScriptVersions: () => TsVersionData[];
/** Get the TypeScript version being used by attest as as string like "5.0"
 *  Does not include alternate versions that may be referenced by cache files
 */
export declare const getPrimaryTsVersionUnderTest: () => `${Digit}.${Digit}`;
