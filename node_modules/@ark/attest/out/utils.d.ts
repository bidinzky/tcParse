export declare const getFileKey: (path: string) => string;
/**
 *  Can be used to allow arbitrarily chained property access and function calls.
 */
export declare const chainableNoOpProxy: any;
export type ContextualTests<ctx = unknown> = (it: (name: string, test: (ctx: ctx) => void) => void) => void;
export type ContextualizeRoot = {
    <ctx>(tests: () => void, createCtx?: never): void;
    <ctx>(createCtx: () => ctx, tests: ContextualTests<ctx>): void;
};
export type ContextualizeEach = <ctx>(name: string, createCtx: () => ctx, tests: ContextualTests<ctx>) => void;
export interface Contextualize extends ContextualizeRoot {
    each: ContextualizeEach;
}
export declare const contextualize: Contextualize;
